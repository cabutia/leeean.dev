---
import Icon from "./Icon.astro";
import { t } from "i18next";
import { LanguageSelector } from "astro-i18next/components";
import { data } from "@/data";
---

<div class="fixed top-0 left-0 w-full z-20">
    <div class="container mx-auto py-6 px-4 lg:px-8">
        <div class="h-16 w-full bg-background/70 backdrop-blur-xs rounded-full px-6 border border-background">
            <div class="w-full h-16 flex justify-between items-center">
                <a href="#" class="flex items-center text-xl text-primary">
                    <span class="font-bold leading-4">Leeean</span>
                    <span class="leading-4 text-primary-200/50">.dev</span>
                </a>

                <div class="size-10 lg:hidden" id="mobile-menu-trigger">
                    <Icon name="menu" />
                </div>

                <!-- Desktop menu -->
                <div class="flex-center h-16 hidden lg:flex">
                    <a href={data.permalinks.career} class="h-12 flex-center px-4 text-primary-500">
                        {t("site:nav.my-career")}
                    </a>
                    <a href={data.permalinks.techStack} class="h-12 flex-center px-4 text-primary-500">
                        {t("site:nav.tech-stack")}
                    </a>
                    <a href={`/${t("site:cv-file")}`} target="_blank" class="h-12 flex-center px-4 text-primary-500">
                        {t("site:nav.download-cv")}
                    </a>
                    <div class="h-12 flex-center px-4 text-primary-500">
                        <Icon name="language" class="size-4 mr-1" />
                        <LanguageSelector class="text-primary-500" languageMapping={{ es: "ES", en: "EN" }} />
                    </div>
                    <a
                        href={data.permalinks.contact}
                        class="h-10 flex-center px-4 bg-primary-300 hover:bg-primary-200 text-primary-900 font-medium rounded-full"
                    >
                        {t("site:nav.cta")}
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Mobile menu -->
<div class="fixed inset-0 top-32 p-4 z-30 lg:hidden transition-all opacity-0 invisible" id="mobile-menu">
    <div class="size-full flex flex-col bg-black/60 rounded-lg backdrop-blur p-8">
        <a href={data.permalinks.career} class="h-20 flex-center px-4 text-primary-200 text-2xl">
            {t("site:nav.my-career")}
        </a>
        <a href={data.permalinks.techStack} class="h-20 flex-center px-4 text-primary-200 text-2xl">
            {t("site:nav.tech-stack")}
        </a>
        <a href={`/${t("site:cv-file")}`} target="_blank" class="h-20 flex-center px-4 text-primary-200 text-2xl">
            {t("site:nav.download-cv")}
        </a>
        <div class="h-20 flex-center px-4 text-primary-200 text-2xl">
            <Icon name="language" class="size-8" />
            <LanguageSelector class="text-primary-200" languageMapping={{ es: "ES", en: "EN" }} />
        </div>
        <a
            href={data.permalinks.contact}
            class="h-16 flex-center px-4 bg-primary-300 hover:bg-primary-200 text-primary-900 font-medium rounded-full mt-auto text-2xl"
        >
            {t("site:nav.cta")}
        </a>
    </div>
</div>

<script>
    const mobileMenuEl = document.querySelector("#mobile-menu");
    const mobileMenuTrigger = document.querySelector("#mobile-menu-trigger");
    const anchorElements = mobileMenuEl.querySelectorAll("a");

    let showMobileMenu = false;

    const updateMenuState = () => {
        if (showMobileMenu) {
            mobileMenuEl.classList.remove("opacity-0");
            mobileMenuEl.classList.remove("invisible");
            mobileMenuEl.classList.add("opacity-100");
            mobileMenuEl.classList.add("visible");
        } else {
            mobileMenuEl.classList.remove("opacity-100");
            mobileMenuEl.classList.remove("visible");
            mobileMenuEl.classList.add("opacity-0");
            mobileMenuEl.classList.add("invisible");
        }
    };

    const hideMenu = () => (showMobileMenu = false);
    const toggleMenu = () => (showMobileMenu = !showMobileMenu);

    anchorElements.forEach((el) => {
        el.addEventListener("click", () => {
            hideMenu();
            updateMenuState();
        });
    });

    mobileMenuTrigger.addEventListener("click", () => {
        console.log("trigger");
        toggleMenu();
        updateMenuState();
    });
</script>
